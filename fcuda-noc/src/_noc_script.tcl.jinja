set project_name [lindex $argv 0]
set prj_path ./${project_name}
set ppFile_path ./prepareFile_709

#0: no sim, 1: sim with MIG + DDR3, 2: sim without MIG + DDR3
set sim_flow [lindex $argv 1]
#0: no synthesis, 1: synthesis + P & R
set syn_flow [lindex $$argv 2]

file delete -force ${prj_path}
create_project -force ${project_name} ${prj_path} -part {{device_id}}

set_property source_mgmt_mode None [current_project]

if {[catch {glob ./prj_files/*.v} check_v]} {
  puts $check_v
} else {
  foreach file [glob ./prj_files/*.v] {
    add_files $file
  }
}

if {[catch {glob ./prj_files/*.vh} check_vh]} {
  puts $check_vh
} else {
  foreach file [glob ./prj_files/*.vh] {
    add_files $file
    import_files $file
  }
}

if {[catch {glob ./prj_files/*.vhd} check_vhd]} {
  puts $check_vhd
} else {
  foreach file [glob ./prj_files/*.vhd] {
    add_files $file
    import_files $file
  }
}

if {[catch {glob ./prj_files/*.mif} check_mif]} {
  puts $check_mif
} else {
  foreach file [glob ./prj_files/*.mif] {
    add_files $file
    import_files $file
  }
}

if {[catch {glob ./prj_files/*.dat} check_dat]} {
  puts $check_dat
} else {
  foreach file [glob ./prj_files/*.dat] {
    add_files $file
  }
}

if {[catch {glob ./prj_files/*.hex} check_hex]} {
  puts $check_hex
} else {
  foreach file [glob ./prj_files/*.hex] {
    add_files $file
    set_property file_type {Memory Initialization Files} [get_files $file]
  }
}

import_files -force -norecurse
update_compile_order -fileset sources_1
update_compile_order -fileset sim_1

if {$sim_flow == 2} {

set_property top DUT_TOP_tb [get_filesets sim_1]
set_property top_lib xil_defaultlib [get_filesets sim_1]

update_compile_order -fileset sim_1

launch_simulation
#Vivado 2014.2
#launch_xsim -simset sim_1 -mode behavioral
run all

} 

if {($sim_flow != 2) ||  ($syn_flow != 0)} {

ipx::package_project -import_files -root_dir ${prj_path}/${project_name}.srcs/sources_1/imports -vendor user.org -library user -taxonomy /UserIP

set_property core_revision 2 [ipx::current_core]
ipx::create_xgui_files [ipx::current_core]
ipx::update_checksums [ipx::current_core]
ipx::save_core [ipx::current_core]
set_property  ip_repo_paths ${prj_path}/${project_name}.srcs/sources_1/imports [current_project]
update_ip_catalog

create_bd_design "design_1"

# Create instance: gen_network_top_0, and set properties
set gen_network_top_0 [ create_bd_cell -type ip -vlnv user.org:user:gen_network_top:1.0 gen_network_top_0 ]
set_property -dict [ list CONFIG.C_M_AXI_MEMPORT_P0_DATA_WIDTH {64} ] $gen_network_top_0

create_bd_cell -type ip -vlnv xilinx.com:ip:mig_7series mig_7series_0
file copy $ppFile_path/mig_a.prj $prj_path/${project_name}.srcs/sources_1/bd/design_1/ip/design_1_mig_7series_0_0/

set_property -name {CONFIG.XML_INPUT_FILE} -value  {mig_a.prj} -objects [get_bd_cells mig_7series_0]
set_property -name {CONFIG.RESET_BOARD_INTERFACE} -value  {Custom} -objects [get_bd_cells mig_7series_0]
set_property -name {CONFIG.MIG_DONT_TOUCH_PARAM} -value  {Custom} -objects [get_bd_cells mig_7series_0]
set_property -name {CONFIG.BOARD_MIG_PARAM} -value  {Custom} -objects [get_bd_cells mig_7series_0]

create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0
set_property -dict [list CONFIG.NUM_SI {1} CONFIG.NUM_MI {1}] [get_bd_cells axi_interconnect_0] 

# connect interconnect with MIG
connect_bd_intf_net [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins mig_7series_0/S_AXI]

# instantiate proc_sys_reset
create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0
create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_1
set_property -dict [list CONFIG.C_AUX_RESET_HIGH.VALUE_SRC USER] [get_bd_cells proc_sys_reset_0]
set_property -dict [list CONFIG.C_AUX_RESET_HIGH {0}] [get_bd_cells proc_sys_reset_0]

# wire connection

# make out_connection
create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR3
connect_bd_intf_net [get_bd_intf_pins mig_7series_0/DDR3] [get_bd_intf_ports DDR3]
create_bd_port -dir I -type clk sys_clk_i
connect_bd_net [get_bd_pins /mig_7series_0/sys_clk_i] [get_bd_ports sys_clk_i]
create_bd_port -dir I -type clk clk_ref_i
connect_bd_net [get_bd_pins /mig_7series_0/clk_ref_i] [get_bd_ports clk_ref_i]
create_bd_port -dir I -type rst sys_rst
connect_bd_net [get_bd_pins /mig_7series_0/sys_rst] [get_bd_ports sys_rst]
create_bd_port -dir O init_calib_complete
connect_bd_net [get_bd_pins /mig_7series_0/init_calib_complete] [get_bd_ports init_calib_complete]

# wire connection
create_bd_port -dir I -type clk aclk
# This option will be overwritten by the *.xdc constraint file 
set_property CONFIG.FREQ_HZ 100000000 [ get_bd_ports aclk]
connect_bd_net [get_bd_pins proc_sys_reset_0/slowest_sync_clk] [get_bd_ports aclk] [get_bd_pins axi_interconnect_0/ACLK]
connect_bd_net [get_bd_pins mig_7series_0/ui_clk_sync_rst] [get_bd_pins proc_sys_reset_0/ext_reset_in]
connect_bd_net [get_bd_pins proc_sys_reset_0/interconnect_aresetn] [get_bd_pins axi_interconnect_0/ARESETN]
connect_bd_net [get_bd_pins mig_7series_0/mmcm_locked] [get_bd_pins proc_sys_reset_0/dcm_locked]

#make a second control IP
set_property -dict [list CONFIG.C_AUX_RESET_HIGH.VALUE_SRC USER] [get_bd_cells proc_sys_reset_1]
set_property -dict [list CONFIG.C_AUX_RESET_HIGH {0}] [get_bd_cells proc_sys_reset_1]
connect_bd_net [get_bd_pins mig_7series_0/ui_clk] [get_bd_pins proc_sys_reset_1/slowest_sync_clk]
connect_bd_net -net [get_bd_nets mig_7series_0_ui_clk_sync_rst] [get_bd_pins proc_sys_reset_1/ext_reset_in] [get_bd_pins mig_7series_0/ui_clk_sync_rst]
connect_bd_net [get_bd_pins proc_sys_reset_1/interconnect_aresetn] [get_bd_pins axi_interconnect_0/M00_ARESETN]
connect_bd_net [get_bd_pins proc_sys_reset_1/peripheral_aresetn] [get_bd_pins mig_7series_0/aresetn]
connect_bd_net [get_bd_pins mig_7series_0/ui_clk] [get_bd_pins axi_interconnect_0/M00_ACLK]

save_bd_design

# wire connection for each core

# clk connection for each AXI interface and core aclk
connect_bd_net [get_bd_pins /gen_network_top_0/aclk] [get_bd_ports aclk] [get_bd_pins axi_interconnect_0/S00_ACLK]
connect_bd_net [get_bd_pins proc_sys_reset_0/peripheral_aresetn] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins gen_network_top_0/aresetn]
connect_bd_intf_net [get_bd_intf_pins gen_network_top_0/M_AXI_MEMPORT_P0] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
#set_property -dict [list CONFIG.S00_HAS_DATA_FIFO {2}] [get_bd_cells axi_interconnect_0]

save_bd_design

# make outside port for argument
{%- for x in scalar_values %}
create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 {{x.name}}
set_property -dict [list CONFIG.CONST_WIDTH {32} CONFIG.CONST_VAL {{x.value}}] [get_bd_cells {{x.name}}]
connect_bd_net [get_bd_pins {{x.name}}/dout] [get_bd_pins gen_network_top_0/{{x.name}}]
{%- endfor %}

# control signals
create_bd_port -dir I ap_start
create_bd_port -dir O ap_ready
create_bd_port -dir O ap_done
create_bd_port -dir O ap_idle
connect_bd_net [get_bd_pins /gen_network_top_0/ap_start] [get_bd_ports ap_start]
connect_bd_net [get_bd_pins /gen_network_top_0/ap_ready] [get_bd_ports ap_ready]
connect_bd_net [get_bd_pins /gen_network_top_0/ap_done] [get_bd_ports ap_done]
connect_bd_net [get_bd_pins /gen_network_top_0/ap_idle] [get_bd_ports ap_idle]

# core address
set_property -dict [list CONFIG.C_M_AXI_MEMPORT_P0_TARGET_ADDR {0x00000000}] [get_bd_cells gen_network_top_0]

# address editor
assign_bd_address [get_bd_addr_segs {mig_7series_0/memmap/memaddr }]

# generate output
generate_target all [get_files  $prj_path/${project_name}.srcs/sources_1/bd/design_1/design_1.bd] 

# make wrapper
make_wrapper -files [get_files $prj_path/${project_name}.srcs/sources_1/bd/design_1/design_1.bd] -top
import_files -force -norecurse $prj_path/${project_name}.srcs/sources_1/bd/design_1/hdl/design_1_wrapper.v
update_compile_order -fileset sources_1
update_compile_order -fileset sources_1
update_compile_order -fileset sim_1

save_bd_design

if {$sim_flow == 1} {

    add_files -fileset sim_1 -norecurse -scan_for_includes $ppFile_path/ddr3_model_parameters.vh
    import_files -fileset sim_1 -norecurse $ppFile_path/ddr3_model_parameters.vh

    add_files -fileset sim_1 -norecurse -scan_for_includes $ppFile_path/ddr3_model.v 
    add_files -fileset sim_1 -norecurse -scan_for_includes $ppFile_path/wiredly.v

    import_files -fileset sim_1 -norecurse $ppFile_path/ddr3_model.v 
    import_files -fileset sim_1 -norecurse $ppFile_path/wiredly.v

    add_files -fileset sim_1 -norecurse -scan_for_includes $ppFile_path/sim_tb_top.v
    import_files -fileset sim_1 -force -norecurse $ppFile_path/sim_tb_top.v

    set_property top sim_for_top [get_filesets sim_1]
    set_property top_lib xil_defaultlib [get_filesets sim_1]

    update_compile_order -fileset sim_1
    save_bd_design
    launch_simulation
    #Vivado 2014.2 command
    #launch_xsim -simset sim_1 -mode behavioral
    run all
}

if {$syn_flow == 1} {
    add_files -fileset constrs_1 -norecurse -force ./prepareFile_709/const.xdc
    import_files -force -norecurse

    #set_property strategy Performance_Explore [get_runs impl_1]
    set_property top design_1_wrapper [current_fileset]
    update_compile_order -fileset sources_1
    reset_run synth_1
    launch_runs impl_1
    wait_on_run synth_1
    wait_on_run impl_1
}

}
exit
